{"mappings":"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","sources":["example/graphing.js","src/materials/debug/GraphMaterial.js"],"sourcesContent":["import * as THREE from 'three';\nimport GUI from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport { GraphMaterial } from '../src/materials/debug/GraphMaterial.js';\nimport * as BSDFGLSL from '../src/shader/bsdf/index.js';\nimport * as CommonGLSL from '../src/shader/common/index.js';\n\nconst graphFunctionSnippet = /* glsl */`\n\t#include <common>\n\t${ CommonGLSL.math_functions }\n\t${ CommonGLSL.util_functions }\n\t${ BSDFGLSL.ggx_functions }\n\n\tvec4 graphFunction( float x ) {\n\n\t\tvec3 wi = normalize( vec3( 1.0, 1.0, 1.0 ) );\n\t\tvec3 halfVec = vec3( 0.0, 0.0, 1.0 );\n\t\tfloat theta = dot( wi, halfVec );\n\n\t\treturn vec4(\n\t\t\tggxPDF( wi, halfVec, x ),\n\t\t\tggxDistribution( halfVec, x ),\n\t\t\tggxShadowMaskG1( theta, x ),\n\t\t\tggxLamda( theta, x )\n\t\t);\n\n\t}\n`;\n\nlet camera, scene, renderer, plane;\nlet cameraCenter;\nlet zoom = 10;\nlet dataEl, dataContainerEl;\nconst params = {\n\taspect: 1,\n\tdisplayX: true,\n\tdisplayY: true,\n\tdisplayZ: true,\n\tdisplayW: true,\n\treset() {\n\n\t\tzoom = 10;\n\t\tcameraCenter.set(\n\t\t\t- zoom * 0.5 + zoom * 0.05,\n\t\t\tgetAspect() * zoom * 0.5 - zoom * 0.05,\n\t\t);\n\n\t}\n};\n\ninit();\n\n// init\nasync function init() {\n\n\tdataContainerEl = document.getElementById( 'dataContainer' );\n\tdataEl = document.getElementById( 'data' );\n\n\t// renderer init\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\trenderer.setClearColor( 0x11161C );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setAnimationLoop( animation );\n\tdocument.body.appendChild( renderer.domElement );\n\n\t// init camera\n\tcamera = new THREE.OrthographicCamera();\n\tcamera.position.set( 0, 0, 1.5 );\n\n\tscene = new THREE.Scene();\n\n\tcameraCenter = new THREE.Vector2();\n\n\t// image plane\n\tplane = new THREE.Mesh(\n\t\tnew THREE.PlaneGeometry(),\n\t\tnew GraphMaterial( {\n\t\t\tside: THREE.DoubleSide,\n\t\t\tthickness: 1,\n\t\t\tgraphFunctionSnippet,\n\t\t} )\n\t);\n\tplane.scale.setScalar( 2.0 );\n\tscene.add( plane );\n\n\tcameraCenter.set(\n\t\t- zoom * 0.5 + zoom * 0.05,\n\t\tgetAspect() * zoom * 0.5 - zoom * 0.05,\n\t);\n\n\tconst gui = new GUI();\n\tgui.add( plane.material, 'dim' );\n\tgui.add( plane.material, 'thickness', 0.5, 10.0 );\n\tgui.add( params, 'aspect', 0.1, 2 );\n\tgui.add( params, 'reset' );\n\n\tconst graphFolder = gui.addFolder( 'graphs' );\n\tgraphFolder.add( params, 'displayX' ).name( 'display graph 1' );\n\tgraphFolder.add( params, 'displayY' ).name( 'display graph 2' );\n\tgraphFolder.add( params, 'displayZ' ).name( 'display graph 3' );\n\tgraphFolder.add( params, 'displayW' ).name( 'display graph 4' );\n\n\tlet clicked = false;\n\tlet prevX = - 1;\n\tlet prevY = - 1;\n\trenderer.domElement.addEventListener( 'pointerleave', () =>{\n\n\t\tdataContainerEl.style.visibility = 'hidden';\n\n\t} );\n\n\trenderer.domElement.addEventListener( 'pointerenter', () =>{\n\n\t\tdataContainerEl.style.visibility = 'visible';\n\n\t} );\n\n\trenderer.domElement.addEventListener( 'pointerdown', e => {\n\n\t\tclicked = true;\n\t\tprevX = e.clientX;\n\t\tprevY = e.clientY;\n\n\t} );\n\n\trenderer.domElement.addEventListener( 'pointermove', e => {\n\n\t\tclicked = clicked && Boolean( e.buttons & 1 );\n\t\tif ( clicked ) {\n\n\t\t\tconst deltaX = e.clientX - prevX;\n\t\t\tconst deltaY = e.clientY - prevY;\n\n\t\t\tprevX = e.clientX;\n\t\t\tprevY = e.clientY;\n\n\t\t\tconst xWidth = 1;\n\t\t\tconst yWidth = getAspect();\n\n\t\t\tconst graphDeltaX = zoom * xWidth * deltaX / window.innerWidth;\n\t\t\tconst graphDeltaY = zoom * yWidth * deltaY / window.innerHeight;\n\n\t\t\tcameraCenter.x += graphDeltaX;\n\t\t\tcameraCenter.y += graphDeltaY;\n\n\t\t}\n\n\t\tdataContainerEl.style.left = `${ e.clientX }px`;\n\t\tdataContainerEl.style.top = `${ e.clientY }px`;\n\n\t\tconst data = mouseToGraphValue( e.clientX, e.clientY );\n\t\tdataEl.innerText = `x: ${ data.x.toFixed( 3 ) }\\ny: ${ data.y.toFixed( 3 ) }`;\n\n\t} );\n\n\trenderer.domElement.addEventListener( 'wheel', e => {\n\n\t\tconst mouseX = e.clientX;\n\t\tconst mouseY = e.clientY;\n\n\t\tconst xWidth = 1;\n\t\tconst yWidth = getAspect();\n\n\t\tconst centerRelX = ( mouseX / window.innerWidth ) - 0.5;\n\t\tconst centerRelY = ( mouseY / window.innerHeight ) - 0.5;\n\n\t\tconst graphX = zoom * xWidth * centerRelX;\n\t\tconst graphY = zoom * yWidth * centerRelY;\n\n\t\tconst beforeZoom = zoom;\n\t\tconst delta = Math.pow( 0.95, 1.0 );\n\n\t\tif ( e.deltaY < 0 ) {\n\n\t\t\tzoom *= delta;\n\n\t\t} else {\n\n\t\t\tzoom /= delta;\n\n\t\t}\n\n\t\tzoom = Math.max( zoom, 0.1 );\n\t\tzoom = Math.min( zoom, 100 );\n\n\t\tconst afterX = graphX * zoom / beforeZoom;\n\t\tconst afterY = graphY * zoom / beforeZoom;\n\n\t\tcameraCenter.x -= graphX - afterX;\n\t\tcameraCenter.y -= graphY - afterY;\n\n\t} );\n\n\twindow.addEventListener( 'resize', () => {\n\n\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\t} );\n\n}\n\n// animation\nfunction animation() {\n\n\tconst mat = plane.material;\n\tconst xWidth = 1;\n\tconst yWidth = getAspect();\n\n\tmat.xRange.set(\n\t\t- cameraCenter.x - 0.5 * xWidth * zoom,\n\t\t- cameraCenter.x + 0.5 * xWidth * zoom,\n\t);\n\n\tmat.yRange.set(\n\t\tcameraCenter.y - 0.5 * yWidth * zoom,\n\t\tcameraCenter.y + 0.5 * yWidth * zoom,\n\t);\n\n\tmat.graphDisplay.set(\n\t\tNumber( params.displayX ),\n\t\tNumber( params.displayY ),\n\t\tNumber( params.displayZ ),\n\t\tNumber( params.displayW ),\n\t);\n\n\trenderer.render( scene, camera );\n\n}\n\nfunction getAspect() {\n\n\treturn params.aspect * window.innerHeight / window.innerWidth;\n\n}\n\nfunction mouseToGraphValue( x, y ) {\n\n\tconst xWidth = 1;\n\tconst yWidth = getAspect();\n\n\tconst centerRelX = ( x / window.innerWidth ) - 0.5;\n\tconst centerRelY = ( y / window.innerHeight ) - 0.5;\n\n\tconst graphX = zoom * xWidth * centerRelX - cameraCenter.x;\n\tconst graphY = zoom * yWidth * centerRelY - cameraCenter.y;\n\n\treturn { x: graphX, y: - graphY };\n\n}\n","import { NoBlending, Color, Vector2, Vector4 } from 'three';\nimport { MaterialBase } from '../MaterialBase.js';\n\nexport class GraphMaterial extends MaterialBase {\n\n\tget graphFunctionSnippet() {\n\n\t\treturn this._graphFunctionSnippet;\n\n\t}\n\n\tset graphFunctionSnippet( v ) {\n\n\t\tthis._graphFunctionSnippet = v;\n\n\t}\n\n\tconstructor( parameters ) {\n\n\t\tsuper( {\n\n\t\t\tblending: NoBlending,\n\n\t\t\ttransparent: false,\n\n\t\t\tdepthWrite: false,\n\n\t\t\tdepthTest: false,\n\n\t\t\tdefines: {\n\n\t\t\t\tUSE_SLIDER: 0,\n\n\t\t\t},\n\n\t\t\tuniforms: {\n\n\t\t\t\tdim: { value: true },\n\t\t\t\tthickness: { value: 1 },\n\t\t\t\tgraphCount: { value: 4 },\n\t\t\t\tgraphDisplay: { value: new Vector4( 1.0, 1.0, 1.0, 1.0 ) },\n\t\t\t\toverlay: { value: true },\n\t\t\t\txRange: { value: new Vector2( - 2.0, 2.0 ) },\n\t\t\t\tyRange: { value: new Vector2( - 2.0, 2.0 ) },\n\t\t\t\tcolors: { value: [\n\t\t\t\t\tnew Color( 0xe91e63 ).convertSRGBToLinear(),\n\t\t\t\t\tnew Color( 0x4caf50 ).convertSRGBToLinear(),\n\t\t\t\t\tnew Color( 0x03a9f4 ).convertSRGBToLinear(),\n\t\t\t\t\tnew Color( 0xffc107 ).convertSRGBToLinear(),\n\t\t\t\t] },\n\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec2 vUv;\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t\t\t}\n\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform bool overlay;\n\t\t\t\tuniform bool dim;\n\t\t\t\tuniform bvec4 graphDisplay;\n\t\t\t\tuniform float graphCount;\n\t\t\t\tuniform float thickness;\n\t\t\t\tuniform vec2 xRange;\n\t\t\t\tuniform vec2 yRange;\n\t\t\t\tuniform vec3 colors[ 4 ];\n\n\t\t\t\t__FUNCTION_CONTENT__\n\n\t\t\t\tfloat map( float _min, float _max, float v ) {\n\n\t\t\t\t\tfloat len = _max - _min;\n\t\t\t\t\treturn _min + len * v;\n\n\t\t\t\t}\n\n\t\t\t\tvec3 getBackground( vec2 point, float steepness ) {\n\n\t\t\t\t\tvec2 pw = fwidth( point );\n\t\t\t\t\tvec2 halfWidth = pw * 0.5;\n\n\t\t\t\t\t// x, y axes\n\t\t\t\t\tvec2 distToZero = smoothstep(\n\t\t\t\t\t\t- halfWidth * 0.5,\n\t\t\t\t\t\thalfWidth * 0.5,\n\t\t\t\t\t\tabs( point.xy ) - pw\n\t\t\t\t\t);\n\n\t\t\t\t\t// 1 unit markers\n\t\t\t\t\tvec2 temp;\n\t\t\t\t\tvec2 modAxis = abs( modf( point + vec2( 0.5 ), temp ) ) - 0.5;\n\t\t\t\t\tvec2 distToAxis = smoothstep(\n\t\t\t\t\t\t- halfWidth,\n\t\t\t\t\t\thalfWidth,\n\t\t\t\t\t\tabs( modAxis.xy ) - pw * 0.5\n\t\t\t\t\t);\n\n\t\t\t\t\t// if we're at a chart boundary then remove the artifacts\n\t\t\t\t\tif ( abs( pw.y ) > steepness * 0.5 ) {\n\n\t\t\t\t\t\tdistToZero.y = 1.0;\n\t\t\t\t\t\tdistToAxis.y = 1.0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// mix colors into a background color\n\t\t\t\t\tfloat axisIntensity = 1.0 - min( distToZero.x, distToZero.y );\n\t\t\t\t\tfloat markerIntensity = 1.0 - min( distToAxis.x, distToAxis.y );\n\n\t\t\t\t\tvec3 markerColor = mix( vec3( 0.005 ), vec3( 0.05 ), markerIntensity );\n\t\t\t\t\tvec3 backgroundColor = mix( markerColor, vec3( 0.2 ), axisIntensity );\n\t\t\t\t\treturn backgroundColor;\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\t// from uniforms\n\t\t\t\t\tfloat sectionCount = overlay ? 1.0 : graphCount;\n\t\t\t\t\tfloat yWidth = abs( yRange.y - yRange.x );\n\n\t\t\t\t\t// separate into sections\n\t\t\t\t\tfloat _section;\n\t\t\t\t\tfloat sectionY = modf( sectionCount * vUv.y, _section );\n\t\t\t\t\tint section = int( sectionCount - _section - 1.0 );\n\n\t\t\t\t\t// get the current point\n\t\t\t\t\tvec2 point = vec2(\n\t\t\t\t\t\tmap( xRange.x, xRange.y, vUv.x ),\n\t\t\t\t\t\tmap( yRange.x, yRange.y, sectionY )\n\t\t\t\t\t);\n\n\t\t\t\t\t// get the results\n\t\t\t\t\tvec4 result = graphFunction( point.x );\n\t\t\t\t\tvec4 delta = result - vec4( point.y );\n\t\t\t\t\tvec4 halfDdf = fwidth( delta ) * 0.5;\n\t\t\t\t\tif ( fwidth( point.y ) > yWidth * 0.5 ) {\n\n\t\t\t\t\t\thalfDdf = vec4( 0.0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// graph display intensity\n\t\t\t\t\tvec4 graph = smoothstep( - halfDdf, halfDdf, abs( delta ) - thickness * halfDdf );\n\n\t\t\t\t\t// initialize the background\n\t\t\t\t\tgl_FragColor.rgb = getBackground( point, yWidth );\n\t\t\t\t\tgl_FragColor.a = 1.0;\n\n\t\t\t\t\tif ( dim && ( point.x < 0.0 || point.y < 0.0 ) ) {\n\n\t\t\t\t\t\tgraph = mix(\n\t\t\t\t\t\t\tvec4( 1.0 ),\n\t\t\t\t\t\t\tgraph,\n\t\t\t\t\t\t\t0.05\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// color the charts\n\t\t\t\t\tif ( sectionCount > 1.0 ) {\n\n\t\t\t\t\t\tif ( graphDisplay[ section ] ) {\n\n\t\t\t\t\t\t\tgl_FragColor.rgb = mix(\n\t\t\t\t\t\t\t\tcolors[ section ],\n\t\t\t\t\t\t\t\tgl_FragColor.rgb,\n\t\t\t\t\t\t\t\tgraph[ section ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( int i = 0; i < int( graphCount ); i ++ ) {\n\n\t\t\t\t\t\t\tif ( graphDisplay[ i ] ) {\n\n\t\t\t\t\t\t\t\tgl_FragColor.rgb = mix(\n\t\t\t\t\t\t\t\t\tcolors[ i ],\n\t\t\t\t\t\t\t\t\tgl_FragColor.rgb,\n\t\t\t\t\t\t\t\t\tgraph[ i ]\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t#include <colorspace_fragment>\n\n\t\t\t\t}\n\n\t\t\t`\n\n\t\t} );\n\n\n\t\tthis._graphFunctionSnippet = /* glsl */`\n\t\t\tvec4 graphFunctionSnippet( float x ) {\n\n\t\t\t\treturn vec4(\n\t\t\t\t\tsin( x * 3.1415926535 ),\n\t\t\t\t\tcos( x ),\n\t\t\t\t\t0.0,\n\t\t\t\t\t0.0\n\t\t\t\t);\n\n\t\t\t}\n\t\t`;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tonBeforeCompile( shader ) {\n\n\t\tshader.fragmentShader = shader.fragmentShader.replace(\n\t\t\t'__FUNCTION_CONTENT__',\n\t\t\tthis._graphFunctionSnippet,\n\t\t);\n\t\treturn shader;\n\n\t}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this._graphFunctionSnippet;\n\n\t}\n\n}\n"],"names":[],"version":3,"file":"graphing.807d03e7.js.map","sourceRoot":"/__parcel_source_root/"}
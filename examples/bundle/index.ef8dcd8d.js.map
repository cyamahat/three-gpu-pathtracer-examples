{"mappings":"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","sources":["example/index.js","node_modules/three/examples/jsm/loaders/RGBELoader.js","node_modules/three/examples/jsm/libs/stats.module.js","example/utils/generateRadialFloorTexture.js","example/utils/getScaledSettings.js","example/utils/LoaderElement.js","node_modules/three-mesh-bvh/src/workers/ParallelMeshBVHWorker.js","node_modules/three-mesh-bvh/src/workers/utils/WorkerBase.js","node_modules/three-mesh-bvh/src/workers/GenerateMeshBVHWorker.js","node_modules/@parcel/runtime-js/lib/runtime-395c6ce3ce0e5794.js","node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-7fe5e0e3b5d0dbf4.js"],"sourcesContent":["import * as THREE from 'three';\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\nimport { generateRadialFloorTexture } from './utils/generateRadialFloorTexture.js';\nimport { GradientEquirectTexture, WebGLPathTracer } from '../src/index.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { getScaledSettings } from './utils/getScaledSettings.js';\nimport { LoaderElement } from './utils/LoaderElement.js';\nimport { ParallelMeshBVHWorker } from 'three-mesh-bvh/src/workers/ParallelMeshBVHWorker.js';\n\nconst MODEL_LIST = {\n\t'Panoramic Telescope': {\n\t\turl: './cartoon_octopus_takes_a_tea_bath/panoramic_telescope_2025-05-25.glb',\n\n\t\tcredit: 'Panoramic Telescope (Rundblickfernrohr)',\n\t\topacityToTransmission: true,\n\t\tcamera_X: 1.84,\n\t\tcamera_Y: - 0.46,\n\t\tcamera_Z: - 0.26,\n\t\tcamera_thetaX: 125,\n\t\tcamera_thetaY: 75,\n\t\tcamera_thetaZ: - 125,\n\t\tscaleFactor: 0.008,\n\t\tframes: 90,\n\t\tpostProcess( model ) {\n\n\t\t\tconst toRemove = [];\n\t\t\tmodel.updateMatrixWorld();\n\n\t\t\tmodel.traverse( c => {\n\n\t\t\t\tif ( c.material ) {\n\n\t\t\t\t\tc.material.emissiveIntensity = 0;\n\t\t\t\t\tif ( c.material instanceof THREE.MeshPhysicalMaterial ) {\n\n\t\t\t\t\t\tconst material = c.material;\n\t\t\t\t\t\tmaterial.metalness = 0.0;\n\t\t\t\t\t\tif ( material.transmission === 1.0 ) {\n\n\t\t\t\t\t\t\tmaterial.roughness = 0.0;\n\t\t\t\t\t\t\tmaterial.metalness = 0.0;\n\t\t\t\t\t\t\tif ( c.name.includes( '29' ) ) {\n\n\t\t\t\t\t\t\t\tmaterial.ior = 1.52;\n\t\t\t\t\t\t\t\tmaterial.color.set( 0xffffff );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tmaterial.ior = 1.52;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( c.material.opacity < 1.0 ) {\n\n\t\t\t\t\t\ttoRemove.push( c );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\ttoRemove.forEach( c => c.parent.remove( c ) );\n\n\t\t}\n\t},\n\t'Dove Prism': {\n\t\turl: './cartoon_octopus_takes_a_tea_bath/octopus_vs_dove_prism_2025-05-23.glb',\n\n\t\tcredit: 'Dove prism + Octopus (https://skfb.ly/oqIRG)',\n\t\topacityToTransmission: true,\n\t\tcamera_X: - 0.1,\n\t\tcamera_Y: 0.1,\n\t\tcamera_Z: 10,\n\t\tcamera_thetaX: - 0.883,\n\t\tcamera_thetaY: - 0.519,\n\t\tcamera_thetaZ: - 0.008,\n\t\tscaleFactor: 0.06,\n\t\tframes: 360,\n\t\tpostProcess( model ) {\n\n\t\t\tconst toRemove = [];\n\t\t\tmodel.updateMatrixWorld();\n\n\t\t\tmodel.traverse( c => {\n\n\t\t\t\tif ( c.material ) {\n\n\t\t\t\t\tc.material.emissiveIntensity = 0;\n\t\t\t\t\tif ( c.material instanceof THREE.MeshPhysicalMaterial ) {\n\n\t\t\t\t\t\tconst material = c.material;\n\t\t\t\t\t\tmaterial.metalness = 0.0;\n\t\t\t\t\t\tif ( material.transmission === 1.0 ) {\n\n\t\t\t\t\t\t\tmaterial.roughness = 0.0;\n\t\t\t\t\t\t\tmaterial.metalness = 0.0;\n\t\t\t\t\t\t\tif ( c.name.includes( '29' ) ) {\n\n\t\t\t\t\t\t\t\tmaterial.ior = 1.52;\n\t\t\t\t\t\t\t\tmaterial.color.set( 0xffffff );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tmaterial.ior = 1.52;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( c.material.opacity < 1.0 ) {\n\n\t\t\t\t\t\ttoRemove.push( c );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\ttoRemove.forEach( c => c.parent.remove( c ) );\n\n\t\t}\n\t},\n\t'Right-Angle Prism': {\n\t\turl: './cartoon_octopus_takes_a_tea_bath/octopus_vs_right-angle_prism_2025-05-25.glb',\n\n\t\tcredit: 'Right-angle prism + Octopus (https://skfb.ly/oqIRG)',\n\t\topacityToTransmission: true,\n\t\tcamera_X: 0,\n\t\tcamera_Y: 1.5,\n\t\tcamera_Z: 0.075,\n\t\tcamera_thetaX: - 90,\n\t\tcamera_thetaY: 0,\n\t\tcamera_thetaZ: 180,\n\t\tscaleFactor: 0.015,\n\t\tframes: 360,\n\t\tpostProcess( model ) {\n\n\t\t\tconst toRemove = [];\n\t\t\tmodel.updateMatrixWorld();\n\n\t\t\tmodel.traverse( c => {\n\n\t\t\t\tif ( c.material ) {\n\n\t\t\t\t\tc.material.emissiveIntensity = 0;\n\t\t\t\t\tif ( c.material instanceof THREE.MeshPhysicalMaterial ) {\n\n\t\t\t\t\t\tconst material = c.material;\n\t\t\t\t\t\tmaterial.metalness = 0.0;\n\t\t\t\t\t\tif ( material.transmission === 1.0 ) {\n\n\t\t\t\t\t\t\tmaterial.roughness = 0.0;\n\t\t\t\t\t\t\tmaterial.metalness = 0.0;\n\t\t\t\t\t\t\tif ( c.name.includes( '29' ) ) {\n\n\t\t\t\t\t\t\t\tmaterial.ior = 1.52;\n\t\t\t\t\t\t\t\tmaterial.color.set( 0xffffff );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tmaterial.ior = 1.52;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( c.material.opacity < 1.0 ) {\n\n\t\t\t\t\t\ttoRemove.push( c );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\ttoRemove.forEach( c => c.parent.remove( c ) );\n\n\t\t}\n\t},\n\t'Amici Roof Prism': {\n\t\turl: './cartoon_octopus_takes_a_tea_bath/octopus_vs_amici_prism_2025-05-25.glb',\n\n\t\tcredit: 'Amici roof prism + Octopus (https://skfb.ly/oqIRG)',\n\t\topacityToTransmission: true,\n\t\tcamera_X: 0,\n\t\tcamera_Y: 1.5,\n\t\tcamera_Z: 0.075,\n\t\tcamera_thetaX: - 90,\n\t\tcamera_thetaY: 0,\n\t\tcamera_thetaZ: 180,\n\t\tscaleFactor: 0.015,\n\t\tframes: 360,\n\t\tpostProcess( model ) {\n\n\t\t\tconst toRemove = [];\n\t\t\tmodel.updateMatrixWorld();\n\n\t\t\tmodel.traverse( c => {\n\n\t\t\t\tif ( c.material ) {\n\n\t\t\t\t\tc.material.emissiveIntensity = 0;\n\t\t\t\t\tif ( c.material instanceof THREE.MeshPhysicalMaterial ) {\n\n\t\t\t\t\t\tconst material = c.material;\n\t\t\t\t\t\tmaterial.metalness = 0.0;\n\t\t\t\t\t\tif ( material.transmission === 1.0 ) {\n\n\t\t\t\t\t\t\tmaterial.roughness = 0.0;\n\t\t\t\t\t\t\tmaterial.metalness = 0.0;\n\t\t\t\t\t\t\tif ( c.name.includes( '29' ) ) {\n\n\t\t\t\t\t\t\t\tmaterial.ior = 1.52;\n\t\t\t\t\t\t\t\tmaterial.color.set( 0xffffff );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tmaterial.ior = 1.52;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( c.material.opacity < 1.0 ) {\n\n\t\t\t\t\t\ttoRemove.push( c );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\ttoRemove.forEach( c => c.parent.remove( c ) );\n\n\t\t}\n\t},\n};\n\nconst envMaps = {\n\t'Aristea Wreck Puresky': 'https://raw.githubusercontent.com/gkjohnson/3d-demo-data/master/hdri/aristea_wreck_puresky_2k.hdr',\n\t'Peppermint Powerplant': 'https://raw.githubusercontent.com/gkjohnson/3d-demo-data/master/hdri/peppermint_powerplant_2k.hdr',\n};\n\nconst models = MODEL_LIST;\n\nconst urlParams = new URLSearchParams( window.location.search );\nconst initialFrame = parseInt( urlParams.get( 'frame' ) ) || 0;\n\nconst orthoWidth = 2;\n\nconst params = {\n\tmultipleImportanceSampling: false,\n\tacesToneMapping: true,\n\trenderScale: 1 / window.devicePixelRatio,\n\tframe: initialFrame,\n\tmodel: '',\n\tenvMap: envMaps[ 'Aristea Wreck Puresky' ],\n\n\tenvironmentIntensity: 0.4,\n\tenvironmentRotation: 0,\n\tcameraProjection: 'Perspective', //'Orthographic',\n\tbackgroundType: 'Environment', //'Gradient',\n\tbgGradientTop: '#ada8f0',\n\tbgGradientBottom: '#b3b3b3',\n\tbackgroundBlur: 0.5,\n\ttransparentBackground: false,\n\tcheckerboardTransparency: false,\n\tenable: true,\n\tfloorColor: '#111111',\n\tfloorOpacity: 0,\n\tfloorRoughness: 0.2,\n\tfloorMetalness: 0.2,\n\tdownloadImage: () => {\n\n\t\tconst canvas = renderer.domElement;\n\t\tconst link = document.createElement( 'a' );\n\t\tlink.href = canvas.toDataURL( 'image/png' );\n\t\tlink.download = 'render_frame_' + params.frame + '.png';\n\t\tlink.click();\n\n\t},\n\t...getScaledSettings(),\n\tbounces: 6,\n\tfilterGlossyFactor: 0,\n\ttiles: 2,\n};\n\nlet floorPlane, gui, stats;\nlet pathTracer, renderer, orthoCamera, perspectiveCamera, activeCamera;\nlet controls, scene, model;\nlet gradientMap;\nlet loader;\nlet mixer;\nlet gltf; // Global gltf to access animations\n\nlet lastModel = null;\n\ninit();\n\nanimate.lastLoggedPosition = null;\n\nasync function init() {\n\n\tloader = new LoaderElement();\n\tloader.attach( document.body );\n\n\trenderer = new THREE.WebGLRenderer( {\n\t\tantialias: true,\n\t\tpreserveDrawingBuffer: true,\n\t} );\n\trenderer.toneMapping = THREE.ACESFilmicToneMapping;\n\tdocument.body.appendChild( renderer.domElement );\n\n\tpathTracer = new WebGLPathTracer( renderer );\n\tpathTracer.setBVHWorker( new ParallelMeshBVHWorker() );\n\tpathTracer.physicallyCorrectLights = true;\n\tpathTracer.tiles.set( params.tiles, params.tiles );\n\tpathTracer.multipleImportanceSampling = params.multipleImportanceSampling;\n\tpathTracer.transmissiveBounces = params.bounces;\n\n\tconst aspect = window.innerWidth / window.innerHeight;\n\tperspectiveCamera = new THREE.PerspectiveCamera( 40, aspect, 0.025, 500 );\n\torthoCamera = new THREE.OrthographicCamera(\n\t\torthoWidth / - 2,\n\t\torthoWidth / 2,\n\t\torthoWidth / aspect / 2,\n\t\torthoWidth / aspect / - 2,\n\t\t- 500, 500\n\t);\n\n\tcontrols = new OrbitControls( perspectiveCamera, renderer.domElement );\n\tcontrols.target.set( 0, 0, 0 );\n\tcontrols.update();\n\tcontrols.addEventListener( 'change', () => {\n\n\t\tpathTracer.updateCamera();\n\t\tconsole.log( `Camera position (OrbitControls): x=${activeCamera.position.x.toFixed( 3 )}, y=${activeCamera.position.y.toFixed( 3 )}, z=${activeCamera.position.z.toFixed( 3 )}` );\n\t\tconsole.log( `Camera rotation (OrbitControls): x=${THREE.MathUtils.radToDeg( activeCamera.rotation.x ).toFixed( 3 )}, y=${THREE.MathUtils.radToDeg( activeCamera.rotation.y ).toFixed( 3 )}, z=${THREE.MathUtils.radToDeg( activeCamera.rotation.z ).toFixed( 3 )}` );\n\t\tconsole.log( `OrbitControls target: x=${controls.target.x.toFixed( 3 )}, y=${controls.target.y.toFixed( 3 )}, z=${controls.target.z.toFixed( 3 )}` );\n\n\t} );\n\n\tonHashChange();\n\n\tconst selectedModel = models[ params.model ] || models[ Object.keys( models )[ 0 ] ];\n\n\tperspectiveCamera.position.set( selectedModel.camera_X, selectedModel.camera_Y, selectedModel.camera_Z );\n\torthoCamera.position.set( selectedModel.camera_X, selectedModel.camera_Y, selectedModel.camera_Z );\n\tperspectiveCamera.rotation.set(\n\t\tTHREE.MathUtils.degToRad( selectedModel.camera_thetaX || 0 ),\n\t\tTHREE.MathUtils.degToRad( selectedModel.camera_thetaY || 0 ),\n\t\tTHREE.MathUtils.degToRad( selectedModel.camera_thetaZ || 0 )\n\t);\n\torthoCamera.rotation.set(\n\t\tTHREE.MathUtils.degToRad( selectedModel.camera_thetaX || 0 ),\n\t\tTHREE.MathUtils.degToRad( selectedModel.camera_thetaY || 0 ),\n\t\tTHREE.MathUtils.degToRad( selectedModel.camera_thetaZ || 0 )\n\t);\n\n\tupdateCameraProjection( params.cameraProjection );\n\n\tconsole.log( `Initial camera position: x=${activeCamera.position.x.toFixed( 3 )}, y=${activeCamera.position.y.toFixed( 3 )}, z=${activeCamera.position.z.toFixed( 3 )}` );\n\tconsole.log( `Initial camera rotation: x=${THREE.MathUtils.radToDeg( activeCamera.rotation.x ).toFixed( 3 )}, y=${THREE.MathUtils.radToDeg( activeCamera.rotation.y ).toFixed( 3 )}, z=${THREE.MathUtils.radToDeg( activeCamera.rotation.z ).toFixed( 3 )}` );\n\n\tgradientMap = new GradientEquirectTexture();\n\tgradientMap.topColor.set( params.bgGradientTop );\n\tgradientMap.bottomColor.set( params.bgGradientBottom );\n\tgradientMap.update();\n\n\tscene = new THREE.Scene();\n\tscene.background = gradientMap;\n\n\tconst floorTex = generateRadialFloorTexture( 1024 );\n\tfloorPlane = new THREE.Mesh(\n\t\tnew THREE.PlaneGeometry(),\n\t\tnew THREE.MeshStandardMaterial( {\n\t\t\tmap: floorTex,\n\t\t\ttransparent: true,\n\t\t\tcolor: 0x111111,\n\t\t\troughness: 0.1,\n\t\t\tmetalness: 0.0,\n\t\t\tside: THREE.DoubleSide,\n\t\t} )\n\t);\n\tfloorPlane.scale.setScalar( 5 );\n\tfloorPlane.rotation.x = - Math.PI / 2;\n\tscene.add( floorPlane );\n\n\n\tstats = new Stats();\n\tdocument.body.appendChild( stats.dom );\n\tstats.dom.style.display = 'none';\t// Hide the Stats Container\n\n\t// Load environment map\n\tawait new Promise( resolve => {\n\n\t\tnew RGBELoader()\n\t\t\t.load( params.envMap, texture => {\n\n\t\t\t\tif ( scene.environment ) {\n\n\t\t\t\t\tscene.environment.dispose();\n\n\t\t\t\t}\n\n\t\t\t\ttexture.mapping = THREE.EquirectangularReflectionMapping;\n\t\t\t\tscene.environment = texture;\n\t\t\t\tpathTracer.updateEnvironment();\n\t\t\t\tconsole.log( 'Environment map loaded:', params.envMap );\n\t\t\t\tresolve();\n\n\t\t\t}, undefined, err => {\n\n\t\t\t\tconsole.error( 'Failed to load environment map:', err );\n\t\t\t\tresolve(); // Continue even if loading fails\n\n\t\t\t} );\n\n\t} );\n\n\tonResize();\n\tbuildGui();\n\tonParamsChange();\n\n\tanimate();\n\n\twindow.addEventListener( 'resize', onResize );\n\twindow.addEventListener( 'hashchange', onHashChange );\n\n}\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\tstats.update();\n\n\t// Optional: Log camera position and rotation if changed\n\tif ( activeCamera ) {\n\n\t\tconst pos = activeCamera.position;\n\t\tconst rot = activeCamera.rotation;\n\t\tconst target = controls.target;\n\t\tif ( ! animate.lastLoggedPosition ||\n            pos.x !== animate.lastLoggedPosition.x ||\n            pos.y !== animate.lastLoggedPosition.y ||\n            pos.z !== animate.lastLoggedPosition.z ||\n            rot.x !== animate.lastLoggedRotation?.x ||\n            rot.y !== animate.lastLoggedRotation?.y ||\n            rot.z !== animate.lastLoggedRotation?.z ) {\n\n\t\t\tconsole.log( `Camera position (animate): x=${pos.x.toFixed( 3 )}, y=${pos.y.toFixed( 3 )}, z=${pos.z.toFixed( 3 )}` );\n\t\t\tconsole.log( `Camera rotation (animate): x=${THREE.MathUtils.radToDeg( rot.x ).toFixed( 3 )}, y=${THREE.MathUtils.radToDeg( rot.y ).toFixed( 3 )}, z=${THREE.MathUtils.radToDeg( rot.z ).toFixed( 3 )}` );\n\t\t\tconsole.log( `OrbitControls target (animate): x=${target.x.toFixed( 3 )}, y=${target.y.toFixed( 3 )}, z=${target.z.toFixed( 3 )}` );\n\t\t\tanimate.lastLoggedPosition = pos.clone();\n\t\t\tanimate.lastLoggedRotation = rot.clone();\n\t\t\tanimate.lastLoggedTarget = target.clone();\n\n\t\t}\n\n\t}\n\n\tif ( ! model ) {\n\n\t\treturn;\n\n\t}\n\n\tif ( params.enable ) {\n\n\t\tif ( ! params.pause || pathTracer.samples < 1 ) {\n\n\t\t\tpathTracer.renderSample();\n\n\t\t}\n\n\t} else {\n\n\t\trenderer.render( scene, activeCamera );\n\n\t}\n\n\tloader.setSamples( pathTracer.samples, pathTracer.isCompiling );\n\n}\n\nfunction onParamsChange() {\n\n\tpathTracer.multipleImportanceSampling = params.multipleImportanceSampling;\n\tpathTracer.bounces = params.bounces;\n\tpathTracer.filterGlossyFactor = params.filterGlossyFactor;\n\tpathTracer.renderScale = params.renderScale;\n\n\tfloorPlane.material.color.set( params.floorColor );\n\tfloorPlane.material.roughness = params.floorRoughness;\n\tfloorPlane.material.metalness = params.floorMetalness;\n\tfloorPlane.material.opacity = params.floorOpacity;\n\n\tscene.environmentIntensity = params.environmentIntensity;\n\tscene.environmentRotation.y = params.environmentRotation;\n\tscene.backgroundBlurriness = params.backgroundBlur;\n\n\tif ( params.backgroundType === 'Gradient' ) {\n\n\t\tgradientMap.topColor.set( params.bgGradientTop );\n\t\tgradientMap.bottomColor.set( params.bgGradientBottom );\n\t\tgradientMap.update();\n\t\tscene.background = gradientMap;\n\t\tscene.backgroundIntensity = 1;\n\t\tscene.environmentRotation.y = 0;\n\t\tconsole.log( 'Background set to Gradient' ); // Debug\n\n\t} else {\n\n\t\tscene.background = scene.environment;\n\t\tscene.backgroundIntensity = params.environmentIntensity;\n\t\tscene.backgroundRotation.y = params.environmentRotation;\n\t\tconsole.log( 'Background set to Environment' ); // Debug\n\n\t}\n\n\tif ( params.transparentBackground ) {\n\n\t\tscene.background = null;\n\t\trenderer.setClearAlpha( 0 );\n\t\tconsole.log( 'Background set to transparent' ); // Debug\n\n\t}\n\n\t// Handle frame update\n\tif ( model && mixer && gltf && gltf.animations && gltf.animations.length > 0 ) {\n\n\t\tconst clip = gltf.animations[ 0 ];\n\t\tconst action = mixer.clipAction( clip );\n\t\tconst fps = 30;\n\t\tconst frameTime = params.frame / fps;\n\t\tconst clampedTime = Math.min( Math.max( frameTime, 0 ), clip.duration );\n\n\t\taction.reset();\n\t\taction.play();\n\t\tmixer.update( clampedTime );\n\t\taction.paused = true;\n\n\t\tmodel.updateMatrixWorld( true );\n\n\t}\n\n\tpathTracer.updateMaterials();\n\tpathTracer.updateEnvironment();\n\tpathTracer.samples = 0; // Force re-render\n\tconsole.log( 'Path tracer environment updated' ); // Debug\n\n\t// Force render for standard mode\n\tif ( ! params.enable ) {\n\n\t\trenderer.render( scene, activeCamera );\n\n\t}\n\n}\n\nfunction onHashChange() {\n\n\tlet hashModel = '';\n\tif ( window.location.hash ) {\n\n\t\tconst modelName = decodeURI( window.location.hash.substring( 1 ) );\n\t\tif ( modelName in models ) {\n\n\t\t\thashModel = modelName;\n\n\t\t}\n\n\t}\n\n\tif ( ! ( hashModel in models ) ) {\n\n\t\thashModel = Object.keys( models )[ 0 ];\n\n\t}\n\n\tparams.model = hashModel;\n\tupdateModel();\n\n}\n\nfunction onResize() {\n\n\tconst w = window.innerWidth;\n\tconst h = window.innerHeight;\n\tconst dpr = window.devicePixelRatio;\n\n\trenderer.setSize( w, h );\n\trenderer.setPixelRatio( dpr );\n\n\tconst aspect = w / h;\n\tperspectiveCamera.aspect = aspect;\n\tperspectiveCamera.updateProjectionMatrix();\n\n\tconst orthoHeight = orthoWidth / aspect;\n\torthoCamera.top = orthoHeight / 2;\n\torthoCamera.bottom = orthoHeight / - 2;\n\torthoCamera.updateProjectionMatrix();\n\n\tpathTracer.updateCamera();\n\n}\n\nfunction buildGui() {\n\n\tif ( gui ) {\n\n\t\tgui.destroy();\n\n\t}\n\n\tgui = new GUI();\n\n\tgui.add( params, 'model', Object.keys( models ) )\n\t\t.name( '3D Model' )\n\t\t.onChange( v => {\n\n\t\t\twindow.location.hash = v;\n\n\t\t} );\n\n\tconst frameCount = MODEL_LIST[ params.model ].frames || 100;\n\n\tgui.add( params, 'cameraProjection', [ 'Perspective', 'Orthographic' ] )\n\t\t.name( 'Camera Projection' )\n\t\t.onChange( v => {\n\n\t\t\tupdateCameraProjection( v );\n\n\t\t} );\n\n\tgui.add( params, 'frame', 0, frameCount, 5 )\n\t\t.name( 'Frame #' )\n\t\t.onChange( ( value ) => {\n\n\t\t\t// Live update logic (no reload)\n\t\t\tonParamsChange( value );\n\n\t\t} )\n\t\t.onFinishChange( ( value ) => {\n\n\t\t\t// Updated frame in URL\n\t\t\tconst url = new URL( window.location );\n\t\t\turl.searchParams.set( 'frame', value );\n\t\t\thistory.pushState( {}, '', url ); // Update URL without reloading\n\t\t\tif ( params.enable ) {\n\n\t\t\t\tupdateModel();\n\n\t\t\t}\n\n\t\t} );\n\n\tgui.add( params, 'downloadImage' ).name( 'Download Image' );\n\n\tconst pathTracingFolder = gui.addFolder( 'Path Tracer' );\n\tpathTracingFolder.add( params, 'enable' ).name( 'Enable PBR Path Tracing' ).onChange( updateModel );\n\tpathTracingFolder.add( params, 'multipleImportanceSampling' ).onChange( onParamsChange );\n\tpathTracingFolder.add( params, 'acesToneMapping' ).onChange( v => {\n\n\t\trenderer.toneMapping = v ? THREE.ACESFilmicToneMapping : THREE.NoToneMapping;\n\n\t} );\n\tpathTracingFolder.add( params, 'bounces', 1, 20, 1 ).onChange( onParamsChange );\n\tpathTracingFolder.add( params, 'filterGlossyFactor', 0, 1 ).onChange( onParamsChange );\n\tpathTracingFolder.add( params, 'renderScale', 0.1, 1.0, 0.01 ).onChange( onParamsChange );\n\tpathTracingFolder.add( params, 'tiles', 1, 10, 1 ).onChange( v => {\n\n\t\tpathTracer.tiles.set( v, v );\n\n\t} );\n\n\tpathTracingFolder.open();\n\n\tconst environmentFolder = gui.addFolder( 'Environment' );\n\tenvironmentFolder.add( params, 'envMap', envMaps ).name( 'map' ).onChange( updateEnvMap );\n\tenvironmentFolder.add( params, 'environmentIntensity', 0.0, 10.0 ).onChange( onParamsChange ).name( 'intensity' );\n\tenvironmentFolder.add( params, 'environmentRotation', 0, 2 * Math.PI ).onChange( onParamsChange );\n\tenvironmentFolder.open();\n\n\tconst backgroundFolder = gui.addFolder( 'Background' );\n\tbackgroundFolder.add( params, 'backgroundType', [ 'Environment', 'Gradient' ] ).onChange( onParamsChange );\n\tbackgroundFolder.addColor( params, 'bgGradientTop' ).onChange( onParamsChange );\n\tbackgroundFolder.addColor( params, 'bgGradientBottom' ).onChange( onParamsChange );\n\tbackgroundFolder.add( params, 'backgroundBlur', 0, 1 ).onChange( onParamsChange );\n\tbackgroundFolder.add( params, 'transparentBackground', 0, 1 ).onChange( onParamsChange );\n\tbackgroundFolder.add( params, 'checkerboardTransparency' ).onChange( v => {\n\n\t\tif ( v ) document.body.classList.add( 'checkerboard' );\n\t\telse document.body.classList.remove( 'checkerboard' );\n\n\t} );\n\tbackgroundFolder.open();\n\n\tconst floorFolder = gui.addFolder( 'Floor' );\n\tfloorFolder.addColor( params, 'floorColor' ).onChange( onParamsChange );\n\tfloorFolder.add( params, 'floorRoughness', 0, 1 ).onChange( onParamsChange );\n\tfloorFolder.add( params, 'floorMetalness', 0, 1 ).onChange( onParamsChange );\n\tfloorFolder.add( params, 'floorOpacity', 0, 1 ).onChange( onParamsChange );\n\tfloorFolder.close();\n\n}\n\nfunction updateEnvMap() {\n\n\tnew RGBELoader()\n\t\t.load( params.envMap, texture => {\n\n\t\t\tif ( scene.environment ) {\n\n\t\t\t\tscene.environment.dispose();\n\n\t\t\t}\n\n\t\t\ttexture.mapping = THREE.EquirectangularReflectionMapping;\n\t\t\tscene.environment = texture;\n\t\t\tpathTracer.updateEnvironment();\n\t\t\tconsole.log( 'Environment map updated:', params.envMap ); // Debug\n\t\t\tif ( params.backgroundType === 'Environment' ) {\n\n\t\t\t\tscene.background = scene.environment;\n\t\t\t\tscene.backgroundIntensity = params.environmentIntensity;\n\t\t\t\tscene.backgroundRotation.y = params.environmentRotation;\n\t\t\t\tpathTracer.samples = 0; // Force re-render\n\t\t\t\tconsole.log( 'Background set to Environment after map update' ); // Debug\n\t\t\t\tif ( ! params.enable ) {\n\n\t\t\t\t\trenderer.render( scene, activeCamera ); // Force standard render\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tonParamsChange();\n\n\t\t}, undefined, err => {\n\n\t\t\tconsole.error( 'Failed to load environment map:', err );\n\n\t\t} );\n\n}\n\nfunction updateCameraProjection( cameraProjection ) {\n\n\tif ( activeCamera ) {\n\n\t\tperspectiveCamera.position.copy( activeCamera.position );\n\t\torthoCamera.position.copy( activeCamera.position );\n\t\tperspectiveCamera.rotation.copy( activeCamera.rotation );\n\t\torthoCamera.rotation.copy( activeCamera.rotation );\n\n\t}\n\n\tif ( cameraProjection === 'Perspective' ) {\n\n\t\tactiveCamera = perspectiveCamera;\n\n\t} else {\n\n\t\tactiveCamera = orthoCamera;\n\n\t}\n\n\tcontrols.object = activeCamera;\n\tcontrols.update();\n\tpathTracer.setCamera( activeCamera );\n\n\t// Log the camera position and rotation after switching projection\n\tconsole.log( `Camera position after projection change (${cameraProjection}): x=${activeCamera.position.x.toFixed( 3 )}, y=${activeCamera.position.y.toFixed( 3 )}, z=${activeCamera.position.z.toFixed( 3 )}` );\n\tconsole.log( `Camera rotation after projection change (${cameraProjection}): x=${THREE.MathUtils.radToDeg( activeCamera.rotation.x ).toFixed( 3 )}, y=${THREE.MathUtils.radToDeg( activeCamera.rotation.y ).toFixed( 3 )}, z=${THREE.MathUtils.radToDeg( activeCamera.rotation.z ).toFixed( 3 )}` );\n\tconsole.log( `OrbitControls target after projection change (${cameraProjection}): x=${controls.target.x.toFixed( 3 )}, y=${controls.target.y.toFixed( 3 )}, z=${controls.target.z.toFixed( 3 )}` );\n\n}\n\nfunction convertOpacityToTransmission( model, ior ) {\n\n\tmodel.traverse( c => {\n\n\t\tif ( c.material ) {\n\n\t\t\tconst material = c.material;\n\t\t\tif ( material.opacity < 0.65 && material.opacity > 0.2 ) {\n\n\t\t\t\tconst newMaterial = new THREE.MeshPhysicalMaterial();\n\t\t\t\tfor ( const key in material ) {\n\n\t\t\t\t\tif ( key in material ) {\n\n\t\t\t\t\t\tif ( material[ key ] === null ) continue;\n\t\t\t\t\t\tif ( material[ key ].isTexture ) {\n\n\t\t\t\t\t\t\tnewMaterial[ key ] = material[ key ];\n\n\t\t\t\t\t\t} else if ( material[ key ].copy && material[ key ].constructor === newMaterial[ key ].constructor ) {\n\n\t\t\t\t\t\t\tnewMaterial[ key ].copy( material[ key ] );\n\n\t\t\t\t\t\t} else if ( typeof material[ key ] === 'number' ) {\n\n\t\t\t\t\t\t\tnewMaterial[ key ] = material[ key ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tnewMaterial.opacity = 1.0;\n\t\t\t\tnewMaterial.transmission = 1.0;\n\t\t\t\tnewMaterial.ior = ior;\n\t\t\t\tconst hsl = {};\n\t\t\t\tnewMaterial.color.getHSL( hsl );\n\t\t\t\thsl.l = Math.max( hsl.l, 0.35 );\n\t\t\t\tnewMaterial.color.setHSL( hsl.h, hsl.s, hsl.l );\n\t\t\t\tc.material = newMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n}\n\nasync function updateModel() {\n\n\tif ( gui ) {\n\n\t\tdocument.body.classList.remove( 'checkerboard' );\n\n\t}\n\n\tconst modelInfo = models[ params.model ];\n\n\trenderer.domElement.style.visibility = 'hidden';\n\tloader.setPercentage( 0 );\n\n\tif ( model ) {\n\n\t\tmodel.traverse( c => {\n\n\t\t\tif ( c.material ) {\n\n\t\t\t\tconst material = c.material;\n\t\t\t\tfor ( const key in material ) {\n\n\t\t\t\t\tif ( material[ key ] && material[ key ].isTexture ) {\n\n\t\t\t\t\t\tmaterial[ key ].dispose();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\t\tscene.remove( model );\n\t\tmodel = null;\n\t\tif ( mixer ) {\n\n\t\t\tmixer.stopAllAction();\n\t\t\tmixer = null;\n\n\t\t}\n\n\t}\n\n\ttry {\n\n\t\tgltf = await new GLTFLoader()\n\t\t\t.setMeshoptDecoder( MeshoptDecoder )\n\t\t\t.loadAsync( modelInfo.url, progress => {\n\n\t\t\t\tif ( progress.total !== 0 && progress.total >= progress.loaded ) {\n\n\t\t\t\t\tloader.setPercentage( 0.5 * progress.loaded / progress.total );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\tmodel = gltf.scene;\n\t\tscene.add( model );\n\n\t\t// Apply per-model scale factor\n\t\tconst scaleFactor = modelInfo.scaleFactor || 1;\n\t\tmodel.scale.setScalar( scaleFactor );\n\n\t\t// Center the model\n\t\tconst box = new THREE.Box3().setFromObject( model );\n\t\tconst center = new THREE.Vector3();\n\t\tbox.getCenter( center );\n\t\tmodel.position\n\t\t\t.addScaledVector( box.min, - 0.5 )\n\t\t\t.addScaledVector( box.max, - 0.5 );\n\n\t\t// Update floor plane\n\t\tbox.setFromObject( model );\n\t\tfloorPlane.position.y = box.min.y;\n\n\t\t// Update camera only if model changes\n\t\tif ( params.model !== lastModel ) {\n\n\t\t\tperspectiveCamera.position.set( modelInfo.camera_X, modelInfo.camera_Y, modelInfo.camera_Z );\n\t\t\torthoCamera.position.set( modelInfo.camera_X, modelInfo.camera_Y, modelInfo.camera_Z );\n\t\t\tperspectiveCamera.rotation.set(\n\t\t\t\tTHREE.MathUtils.degToRad( modelInfo.camera_thetaX || 0 ),\n\t\t\t\tTHREE.MathUtils.degToRad( modelInfo.camera_thetaY || 0 ),\n\t\t\t\tTHREE.MathUtils.degToRad( modelInfo.camera_thetaZ || 0 )\n\t\t\t);\n\t\t\torthoCamera.rotation.set(\n\t\t\t\tTHREE.MathUtils.degToRad( modelInfo.camera_thetaX || 0 ),\n\t\t\t\tTHREE.MathUtils.degToRad( modelInfo.camera_thetaY || 0 ),\n\t\t\t\tTHREE.MathUtils.degToRad( modelInfo.camera_thetaZ || 0 )\n\t\t\t);\n\n\t\t\tcontrols.target.copy( center );\n\t\t\tcontrols.update();\n\t\t\tpathTracer.updateCamera();\n\n\t\t\tlastModel = params.model;\n\n\t\t}\n\n\t\t// Handle animations\n\t\tif ( gltf.animations && gltf.animations.length > 0 ) {\n\n\t\t\tmixer = new THREE.AnimationMixer( model );\n\t\t\tconst clip = gltf.animations[ 0 ];\n\t\t\tconst action = mixer.clipAction( clip );\n\n\t\t\tconst fps = 30;\n\t\t\tconst frameTime = params.frame / fps;\n\t\t\tconst clampedTime = Math.min( Math.max( frameTime, 0 ), clip.duration );\n\n\t\t\taction.reset();\n\t\t\taction.play();\n\t\t\tmixer.update( clampedTime );\n\t\t\taction.paused = true;\n\n\t\t\tmodel.updateMatrixWorld( true );\n\t\t\tmodel.traverse( object => {\n\n\t\t\t\tif ( object.isMesh && object.geometry ) {\n\n\t\t\t\t\tobject.geometry.computeVertexNormals();\n\t\t\t\t\tobject.geometry.attributes.position.needsUpdate = true;\n\t\t\t\t\tif ( object.geometry.attributes.normal ) {\n\n\t\t\t\t\t\tobject.geometry.attributes.normal.needsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( modelInfo.opacityToTransmission ) {\n\n\t\t\tconvertOpacityToTransmission( model, modelInfo.ior || 1.5 );\n\n\t\t}\n\n\t\tmodel.traverse( c => {\n\n\t\t\tif ( c.material ) {\n\n\t\t\t\tc.material.thickness = 1.0;\n\n\t\t\t}\n\n\t\t} );\n\n\t\tif ( modelInfo.postProcess ) {\n\n\t\t\tmodelInfo.postProcess( model );\n\n\t\t}\n\n\t\tif ( modelInfo.rotation ) {\n\n\t\t\tmodel.rotation.set( ...modelInfo.rotation );\n\n\t\t}\n\n\t\tawait pathTracer.setSceneAsync( scene, activeCamera, {\n\t\t\tonProgress: v => loader.setPercentage( 0.5 + 0.5 * v ),\n\t\t} );\n\n\t\tloader.setPercentage( 1 );\n\t\tloader.setCredits( modelInfo.credit || '' );\n\n\t\tbuildGui();\n\t\tonParamsChange();\n\n\t\trenderer.domElement.style.visibility = 'visible';\n\t\tif ( params.checkerboardTransparency ) {\n\n\t\t\tdocument.body.classList.add( 'checkerboard' );\n\n\t\t}\n\n\t} catch ( err ) {\n\n\t\tloader.setCredits( 'Failed to load model: ' + err.message );\n\t\tloader.setPercentage( 1 );\n\n\t}\n\n}\n","import {\n\tDataTextureLoader,\n\tDataUtils,\n\tFloatType,\n\tHalfFloatType,\n\tLinearFilter,\n\tLinearSRGBColorSpace\n} from 'three';\n\n// https://github.com/mrdoob/three.js/issues/5552\n// http://en.wikipedia.org/wiki/RGBE_image_format\n\nclass RGBELoader extends DataTextureLoader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.type = HalfFloatType;\n\n\t}\n\n\t// adapted from http://www.graphics.cornell.edu/~bjw/rgbe.html\n\n\tparse( buffer ) {\n\n\t\tconst\n\t\t\t/* default error routine.  change this to change error handling */\n\t\t\trgbe_read_error = 1,\n\t\t\trgbe_write_error = 2,\n\t\t\trgbe_format_error = 3,\n\t\t\trgbe_memory_error = 4,\n\t\t\trgbe_error = function ( rgbe_error_code, msg ) {\n\n\t\t\t\tswitch ( rgbe_error_code ) {\n\n\t\t\t\t\tcase rgbe_read_error: throw new Error( 'THREE.RGBELoader: Read Error: ' + ( msg || '' ) );\n\t\t\t\t\tcase rgbe_write_error: throw new Error( 'THREE.RGBELoader: Write Error: ' + ( msg || '' ) );\n\t\t\t\t\tcase rgbe_format_error: throw new Error( 'THREE.RGBELoader: Bad File Format: ' + ( msg || '' ) );\n\t\t\t\t\tdefault:\n\t\t\t\t\tcase rgbe_memory_error: throw new Error( 'THREE.RGBELoader: Memory Error: ' + ( msg || '' ) );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\t/* offsets to red, green, and blue components in a data (float) pixel */\n\t\t\t//RGBE_DATA_RED = 0,\n\t\t\t//RGBE_DATA_GREEN = 1,\n\t\t\t//RGBE_DATA_BLUE = 2,\n\n\t\t\t/* number of floats per pixel, use 4 since stored in rgba image format */\n\t\t\t//RGBE_DATA_SIZE = 4,\n\n\t\t\t/* flags indicating which fields in an rgbe_header_info are valid */\n\t\t\tRGBE_VALID_PROGRAMTYPE = 1,\n\t\t\tRGBE_VALID_FORMAT = 2,\n\t\t\tRGBE_VALID_DIMENSIONS = 4,\n\n\t\t\tNEWLINE = '\\n',\n\n\t\t\tfgets = function ( buffer, lineLimit, consume ) {\n\n\t\t\t\tconst chunkSize = 128;\n\n\t\t\t\tlineLimit = ! lineLimit ? 1024 : lineLimit;\n\t\t\t\tlet p = buffer.pos,\n\t\t\t\t\ti = - 1, len = 0, s = '',\n\t\t\t\t\tchunk = String.fromCharCode.apply( null, new Uint16Array( buffer.subarray( p, p + chunkSize ) ) );\n\n\t\t\t\twhile ( ( 0 > ( i = chunk.indexOf( NEWLINE ) ) ) && ( len < lineLimit ) && ( p < buffer.byteLength ) ) {\n\n\t\t\t\t\ts += chunk; len += chunk.length;\n\t\t\t\t\tp += chunkSize;\n\t\t\t\t\tchunk += String.fromCharCode.apply( null, new Uint16Array( buffer.subarray( p, p + chunkSize ) ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( - 1 < i ) {\n\n\t\t\t\t\t/*for (i=l-1; i>=0; i--) {\n\t\t\t\t\t\tbyteCode = m.charCodeAt(i);\n\t\t\t\t\t\tif (byteCode > 0x7f && byteCode <= 0x7ff) byteLen++;\n\t\t\t\t\t\telse if (byteCode > 0x7ff && byteCode <= 0xffff) byteLen += 2;\n\t\t\t\t\t\tif (byteCode >= 0xDC00 && byteCode <= 0xDFFF) i--; //trail surrogate\n\t\t\t\t\t}*/\n\t\t\t\t\tif ( false !== consume ) buffer.pos += len + i + 1;\n\t\t\t\t\treturn s + chunk.slice( 0, i );\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t},\n\n\t\t\t/* minimal header reading.  modify if you want to parse more information */\n\t\t\tRGBE_ReadHeader = function ( buffer ) {\n\n\n\t\t\t\t// regexes to parse header info fields\n\t\t\t\tconst magic_token_re = /^#\\?(\\S+)/,\n\t\t\t\t\tgamma_re = /^\\s*GAMMA\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n\t\t\t\t\texposure_re = /^\\s*EXPOSURE\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n\t\t\t\t\tformat_re = /^\\s*FORMAT=(\\S+)\\s*$/,\n\t\t\t\t\tdimensions_re = /^\\s*\\-Y\\s+(\\d+)\\s+\\+X\\s+(\\d+)\\s*$/,\n\n\t\t\t\t\t// RGBE format header struct\n\t\t\t\t\theader = {\n\n\t\t\t\t\t\tvalid: 0, /* indicate which fields are valid */\n\n\t\t\t\t\t\tstring: '', /* the actual header string */\n\n\t\t\t\t\t\tcomments: '', /* comments found in header */\n\n\t\t\t\t\t\tprogramtype: 'RGBE', /* listed at beginning of file to identify it after \"#?\". defaults to \"RGBE\" */\n\n\t\t\t\t\t\tformat: '', /* RGBE format, default 32-bit_rle_rgbe */\n\n\t\t\t\t\t\tgamma: 1.0, /* image has already been gamma corrected with given gamma. defaults to 1.0 (no correction) */\n\n\t\t\t\t\t\texposure: 1.0, /* a value of 1.0 in an image corresponds to <exposure> watts/steradian/m^2. defaults to 1.0 */\n\n\t\t\t\t\t\twidth: 0, height: 0 /* image dimensions, width/height */\n\n\t\t\t\t\t};\n\n\t\t\t\tlet line, match;\n\n\t\t\t\tif ( buffer.pos >= buffer.byteLength || ! ( line = fgets( buffer ) ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_read_error, 'no header found' );\n\n\t\t\t\t}\n\n\t\t\t\t/* if you want to require the magic token then uncomment the next line */\n\t\t\t\tif ( ! ( match = line.match( magic_token_re ) ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_format_error, 'bad initial token' );\n\n\t\t\t\t}\n\n\t\t\t\theader.valid |= RGBE_VALID_PROGRAMTYPE;\n\t\t\t\theader.programtype = match[ 1 ];\n\t\t\t\theader.string += line + '\\n';\n\n\t\t\t\twhile ( true ) {\n\n\t\t\t\t\tline = fgets( buffer );\n\t\t\t\t\tif ( false === line ) break;\n\t\t\t\t\theader.string += line + '\\n';\n\n\t\t\t\t\tif ( '#' === line.charAt( 0 ) ) {\n\n\t\t\t\t\t\theader.comments += line + '\\n';\n\t\t\t\t\t\tcontinue; // comment line\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( gamma_re ) ) {\n\n\t\t\t\t\t\theader.gamma = parseFloat( match[ 1 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( exposure_re ) ) {\n\n\t\t\t\t\t\theader.exposure = parseFloat( match[ 1 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( format_re ) ) {\n\n\t\t\t\t\t\theader.valid |= RGBE_VALID_FORMAT;\n\t\t\t\t\t\theader.format = match[ 1 ];//'32-bit_rle_rgbe';\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( dimensions_re ) ) {\n\n\t\t\t\t\t\theader.valid |= RGBE_VALID_DIMENSIONS;\n\t\t\t\t\t\theader.height = parseInt( match[ 1 ], 10 );\n\t\t\t\t\t\theader.width = parseInt( match[ 2 ], 10 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( header.valid & RGBE_VALID_FORMAT ) && ( header.valid & RGBE_VALID_DIMENSIONS ) ) break;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! ( header.valid & RGBE_VALID_FORMAT ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_format_error, 'missing format specifier' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! ( header.valid & RGBE_VALID_DIMENSIONS ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_format_error, 'missing image size specifier' );\n\n\t\t\t\t}\n\n\t\t\t\treturn header;\n\n\t\t\t},\n\n\t\t\tRGBE_ReadPixels_RLE = function ( buffer, w, h ) {\n\n\t\t\t\tconst scanline_width = w;\n\n\t\t\t\tif (\n\t\t\t\t\t// run length encoding is not allowed so read flat\n\t\t\t\t\t( ( scanline_width < 8 ) || ( scanline_width > 0x7fff ) ) ||\n\t\t\t\t\t// this file is not run length encoded\n\t\t\t\t\t( ( 2 !== buffer[ 0 ] ) || ( 2 !== buffer[ 1 ] ) || ( buffer[ 2 ] & 0x80 ) )\n\t\t\t\t) {\n\n\t\t\t\t\t// return the flat buffer\n\t\t\t\t\treturn new Uint8Array( buffer );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scanline_width !== ( ( buffer[ 2 ] << 8 ) | buffer[ 3 ] ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_format_error, 'wrong scanline width' );\n\n\t\t\t\t}\n\n\t\t\t\tconst data_rgba = new Uint8Array( 4 * w * h );\n\n\t\t\t\tif ( ! data_rgba.length ) {\n\n\t\t\t\t\trgbe_error( rgbe_memory_error, 'unable to allocate buffer space' );\n\n\t\t\t\t}\n\n\t\t\t\tlet offset = 0, pos = 0;\n\n\t\t\t\tconst ptr_end = 4 * scanline_width;\n\t\t\t\tconst rgbeStart = new Uint8Array( 4 );\n\t\t\t\tconst scanline_buffer = new Uint8Array( ptr_end );\n\t\t\t\tlet num_scanlines = h;\n\n\t\t\t\t// read in each successive scanline\n\t\t\t\twhile ( ( num_scanlines > 0 ) && ( pos < buffer.byteLength ) ) {\n\n\t\t\t\t\tif ( pos + 4 > buffer.byteLength ) {\n\n\t\t\t\t\t\trgbe_error( rgbe_read_error );\n\n\t\t\t\t\t}\n\n\t\t\t\t\trgbeStart[ 0 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 1 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 2 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 3 ] = buffer[ pos ++ ];\n\n\t\t\t\t\tif ( ( 2 != rgbeStart[ 0 ] ) || ( 2 != rgbeStart[ 1 ] ) || ( ( ( rgbeStart[ 2 ] << 8 ) | rgbeStart[ 3 ] ) != scanline_width ) ) {\n\n\t\t\t\t\t\trgbe_error( rgbe_format_error, 'bad rgbe scanline format' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// read each of the four channels for the scanline into the buffer\n\t\t\t\t\t// first red, then green, then blue, then exponent\n\t\t\t\t\tlet ptr = 0, count;\n\n\t\t\t\t\twhile ( ( ptr < ptr_end ) && ( pos < buffer.byteLength ) ) {\n\n\t\t\t\t\t\tcount = buffer[ pos ++ ];\n\t\t\t\t\t\tconst isEncodedRun = count > 128;\n\t\t\t\t\t\tif ( isEncodedRun ) count -= 128;\n\n\t\t\t\t\t\tif ( ( 0 === count ) || ( ptr + count > ptr_end ) ) {\n\n\t\t\t\t\t\t\trgbe_error( rgbe_format_error, 'bad scanline data' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( isEncodedRun ) {\n\n\t\t\t\t\t\t\t// a (encoded) run of the same value\n\t\t\t\t\t\t\tconst byteValue = buffer[ pos ++ ];\n\t\t\t\t\t\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\t\t\t\t\t\tscanline_buffer[ ptr ++ ] = byteValue;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//ptr += count;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// a literal-run\n\t\t\t\t\t\t\tscanline_buffer.set( buffer.subarray( pos, pos + count ), ptr );\n\t\t\t\t\t\t\tptr += count; pos += count;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\t// now convert data from buffer into rgba\n\t\t\t\t\t// first red, then green, then blue, then exponent (alpha)\n\t\t\t\t\tconst l = scanline_width; //scanline_buffer.byteLength;\n\t\t\t\t\tfor ( let i = 0; i < l; i ++ ) {\n\n\t\t\t\t\t\tlet off = 0;\n\t\t\t\t\t\tdata_rgba[ offset ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 1 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 2 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 3 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toffset += 4;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnum_scanlines --;\n\n\t\t\t\t}\n\n\t\t\t\treturn data_rgba;\n\n\t\t\t};\n\n\t\tconst RGBEByteToRGBFloat = function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\t\tconst e = sourceArray[ sourceOffset + 3 ];\n\t\t\tconst scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\t\tdestArray[ destOffset + 0 ] = sourceArray[ sourceOffset + 0 ] * scale;\n\t\t\tdestArray[ destOffset + 1 ] = sourceArray[ sourceOffset + 1 ] * scale;\n\t\t\tdestArray[ destOffset + 2 ] = sourceArray[ sourceOffset + 2 ] * scale;\n\t\t\tdestArray[ destOffset + 3 ] = 1;\n\n\t\t};\n\n\t\tconst RGBEByteToRGBHalf = function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\t\tconst e = sourceArray[ sourceOffset + 3 ];\n\t\t\tconst scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\t\t// clamping to 65504, the maximum representable value in float16\n\t\t\tdestArray[ destOffset + 0 ] = DataUtils.toHalfFloat( Math.min( sourceArray[ sourceOffset + 0 ] * scale, 65504 ) );\n\t\t\tdestArray[ destOffset + 1 ] = DataUtils.toHalfFloat( Math.min( sourceArray[ sourceOffset + 1 ] * scale, 65504 ) );\n\t\t\tdestArray[ destOffset + 2 ] = DataUtils.toHalfFloat( Math.min( sourceArray[ sourceOffset + 2 ] * scale, 65504 ) );\n\t\t\tdestArray[ destOffset + 3 ] = DataUtils.toHalfFloat( 1 );\n\n\t\t};\n\n\t\tconst byteArray = new Uint8Array( buffer );\n\t\tbyteArray.pos = 0;\n\t\tconst rgbe_header_info = RGBE_ReadHeader( byteArray );\n\n\t\tconst w = rgbe_header_info.width,\n\t\t\th = rgbe_header_info.height,\n\t\t\timage_rgba_data = RGBE_ReadPixels_RLE( byteArray.subarray( byteArray.pos ), w, h );\n\n\n\t\tlet data, type;\n\t\tlet numElements;\n\n\t\tswitch ( this.type ) {\n\n\t\t\tcase FloatType:\n\n\t\t\t\tnumElements = image_rgba_data.length / 4;\n\t\t\t\tconst floatArray = new Float32Array( numElements * 4 );\n\n\t\t\t\tfor ( let j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\tRGBEByteToRGBFloat( image_rgba_data, j * 4, floatArray, j * 4 );\n\n\t\t\t\t}\n\n\t\t\t\tdata = floatArray;\n\t\t\t\ttype = FloatType;\n\t\t\t\tbreak;\n\n\t\t\tcase HalfFloatType:\n\n\t\t\t\tnumElements = image_rgba_data.length / 4;\n\t\t\t\tconst halfArray = new Uint16Array( numElements * 4 );\n\n\t\t\t\tfor ( let j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\tRGBEByteToRGBHalf( image_rgba_data, j * 4, halfArray, j * 4 );\n\n\t\t\t\t}\n\n\t\t\t\tdata = halfArray;\n\t\t\t\ttype = HalfFloatType;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tthrow new Error( 'THREE.RGBELoader: Unsupported type: ' + this.type );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\treturn {\n\t\t\twidth: w, height: h,\n\t\t\tdata: data,\n\t\t\theader: rgbe_header_info.string,\n\t\t\tgamma: rgbe_header_info.gamma,\n\t\t\texposure: rgbe_header_info.exposure,\n\t\t\ttype: type\n\t\t};\n\n\t}\n\n\tsetDataType( value ) {\n\n\t\tthis.type = value;\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tfunction onLoadCallback( texture, texData ) {\n\n\t\t\tswitch ( texture.type ) {\n\n\t\t\t\tcase FloatType:\n\t\t\t\tcase HalfFloatType:\n\n\t\t\t\t\ttexture.colorSpace = LinearSRGBColorSpace;\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = true;\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}\n\n\t\treturn super.load( url, onLoadCallback, onProgress, onError );\n\n\t}\n\n}\n\nexport { RGBELoader };\n","var Stats = function () {\n\n\tvar mode = 0;\n\n\tvar container = document.createElement( 'div' );\n\tcontainer.style.cssText = 'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000';\n\tcontainer.addEventListener( 'click', function ( event ) {\n\n\t\tevent.preventDefault();\n\t\tshowPanel( ++ mode % container.children.length );\n\n\t}, false );\n\n\t//\n\n\tfunction addPanel( panel ) {\n\n\t\tcontainer.appendChild( panel.dom );\n\t\treturn panel;\n\n\t}\n\n\tfunction showPanel( id ) {\n\n\t\tfor ( var i = 0; i < container.children.length; i ++ ) {\n\n\t\t\tcontainer.children[ i ].style.display = i === id ? 'block' : 'none';\n\n\t\t}\n\n\t\tmode = id;\n\n\t}\n\n\t//\n\n\tvar beginTime = ( performance || Date ).now(), prevTime = beginTime, frames = 0;\n\n\tvar fpsPanel = addPanel( new Stats.Panel( 'FPS', '#0ff', '#002' ) );\n\tvar msPanel = addPanel( new Stats.Panel( 'MS', '#0f0', '#020' ) );\n\n\tif ( self.performance && self.performance.memory ) {\n\n\t\tvar memPanel = addPanel( new Stats.Panel( 'MB', '#f08', '#201' ) );\n\n\t}\n\n\tshowPanel( 0 );\n\n\treturn {\n\n\t\tREVISION: 16,\n\n\t\tdom: container,\n\n\t\taddPanel: addPanel,\n\t\tshowPanel: showPanel,\n\n\t\tbegin: function () {\n\n\t\t\tbeginTime = ( performance || Date ).now();\n\n\t\t},\n\n\t\tend: function () {\n\n\t\t\tframes ++;\n\n\t\t\tvar time = ( performance || Date ).now();\n\n\t\t\tmsPanel.update( time - beginTime, 200 );\n\n\t\t\tif ( time >= prevTime + 1000 ) {\n\n\t\t\t\tfpsPanel.update( ( frames * 1000 ) / ( time - prevTime ), 100 );\n\n\t\t\t\tprevTime = time;\n\t\t\t\tframes = 0;\n\n\t\t\t\tif ( memPanel ) {\n\n\t\t\t\t\tvar memory = performance.memory;\n\t\t\t\t\tmemPanel.update( memory.usedJSHeapSize / 1048576, memory.jsHeapSizeLimit / 1048576 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn time;\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tbeginTime = this.end();\n\n\t\t},\n\n\t\t// Backwards Compatibility\n\n\t\tdomElement: container,\n\t\tsetMode: showPanel\n\n\t};\n\n};\n\nStats.Panel = function ( name, fg, bg ) {\n\n\tvar min = Infinity, max = 0, round = Math.round;\n\tvar PR = round( window.devicePixelRatio || 1 );\n\n\tvar WIDTH = 80 * PR, HEIGHT = 48 * PR,\n\t\tTEXT_X = 3 * PR, TEXT_Y = 2 * PR,\n\t\tGRAPH_X = 3 * PR, GRAPH_Y = 15 * PR,\n\t\tGRAPH_WIDTH = 74 * PR, GRAPH_HEIGHT = 30 * PR;\n\n\tvar canvas = document.createElement( 'canvas' );\n\tcanvas.width = WIDTH;\n\tcanvas.height = HEIGHT;\n\tcanvas.style.cssText = 'width:80px;height:48px';\n\n\tvar context = canvas.getContext( '2d' );\n\tcontext.font = 'bold ' + ( 9 * PR ) + 'px Helvetica,Arial,sans-serif';\n\tcontext.textBaseline = 'top';\n\n\tcontext.fillStyle = bg;\n\tcontext.fillRect( 0, 0, WIDTH, HEIGHT );\n\n\tcontext.fillStyle = fg;\n\tcontext.fillText( name, TEXT_X, TEXT_Y );\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\tcontext.fillStyle = bg;\n\tcontext.globalAlpha = 0.9;\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\treturn {\n\n\t\tdom: canvas,\n\n\t\tupdate: function ( value, maxValue ) {\n\n\t\t\tmin = Math.min( min, value );\n\t\t\tmax = Math.max( max, value );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 1;\n\t\t\tcontext.fillRect( 0, 0, WIDTH, GRAPH_Y );\n\t\t\tcontext.fillStyle = fg;\n\t\t\tcontext.fillText( round( value ) + ' ' + name + ' (' + round( min ) + '-' + round( max ) + ')', TEXT_X, TEXT_Y );\n\n\t\t\tcontext.drawImage( canvas, GRAPH_X + PR, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT, GRAPH_X, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 0.9;\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, round( ( 1 - ( value / maxValue ) ) * GRAPH_HEIGHT ) );\n\n\t\t}\n\n\t};\n\n};\n\nexport default Stats;\n","import * as THREE from 'three';\n\nexport function generateRadialFloorTexture( dim ) {\n\n\tconst data = new Uint8Array( dim * dim * 4 );\n\n\tfor ( let x = 0; x < dim; x ++ ) {\n\n\t\tfor ( let y = 0; y < dim; y ++ ) {\n\n\t\t\tconst xNorm = x / ( dim - 1 );\n\t\t\tconst yNorm = y / ( dim - 1 );\n\n\t\t\tconst xCent = 2.0 * ( xNorm - 0.5 );\n\t\t\tconst yCent = 2.0 * ( yNorm - 0.5 );\n\t\t\tlet a = Math.max( Math.min( 1.0 - Math.sqrt( xCent ** 2 + yCent ** 2 ), 1.0 ), 0.0 );\n\t\t\ta = a ** 2;\n\t\t\ta = a * 1.5;\n\t\t\ta = Math.min( a, 1.0 );\n\n\t\t\tconst i = y * dim + x;\n\t\t\tdata[ i * 4 + 0 ] = 255;\n\t\t\tdata[ i * 4 + 1 ] = 255;\n\t\t\tdata[ i * 4 + 2 ] = 255;\n\t\t\tdata[ i * 4 + 3 ] = a * 255;\n\n\t\t}\n\n\t}\n\n\tconst tex = new THREE.DataTexture( data, dim, dim );\n\ttex.format = THREE.RGBAFormat;\n\ttex.type = THREE.UnsignedByteType;\n\ttex.minFilter = THREE.LinearFilter;\n\ttex.magFilter = THREE.LinearFilter;\n\ttex.wrapS = THREE.RepeatWrapping;\n\ttex.wrapT = THREE.RepeatWrapping;\n\ttex.needsUpdate = true;\n\treturn tex;\n\n}\n","export function getScaledSettings() {\n\n\tlet tiles = 3;\n\tlet renderScale = Math.max( 1 / window.devicePixelRatio, 0.5 );\n\n\t// adjust performance parameters for mobile\n\tconst aspectRatio = window.innerWidth / window.innerHeight;\n\tif ( aspectRatio < 0.65 ) {\n\n\t\ttiles = 4;\n\t\trenderScale = 0.5 / window.devicePixelRatio;\n\n\t}\n\n\treturn { tiles, renderScale };\n\n}\n","let _styleElement;\nfunction initializeStyles() {\n\n\tif ( _styleElement ) {\n\n\t\treturn;\n\n\t}\n\n\t_styleElement = document.createElement( 'style' );\n\t_styleElement.textContent = /* css */`\n\n\t\t.loader-container, .description {\n\t\t\tposition: absolute;\n\t\t\twidth: 100%;\n\t\t\tfont-family: 'Courier New', Courier, monospace;\n\t\t\tcolor: white;\n\t\t\tfont-weight: light;\n\t\t\talign-items: flex-start;\n\t\t\tfont-size: 14px;\n\t\t\tpointer-events: none;\n\t\t\tuser-select: none;\n\t\t}\n\n\t\t.loader-container {\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t\tbottom: 0;\n\t\t}\n\n\t\t.description {\n\t\t\ttop: 0;\n\t\t\twidth: 100%;\n\t\t\ttext-align: center;\n\t\t\tpadding: 5px 0;\n\t\t}\n\n\t\t.loader-container .bar {\n\t\t\theight: 2px;\n\t\t\tbackground: white;\n\t\t\twidth: 100%;\n\t\t}\n\n\t\t.loader-container .credits,\n\t\t.loader-container .samples,\n\t\t.loader-container .percentage {\n\t\t\tpadding: 5px;\n\t\t\tmargin: 0 0 1px 1px;\n\t\t\tbackground: rgba( 0, 0, 0, 0.2 );\n\t\t\tborder-radius: 2px;\n\t\t\tdisplay: inline-block;\n\t\t}\n\n\t\t.loader-container:not(.loading) .bar,\n\t\t.loader-container:not(.loading) .percentage,\n\t\t.loader-container.loading .credits,\n\t\t.loader-container.loading .samples,\n\t\t.loader-container .credits:empty {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\t.loader-container .credits a,\n\t\t.loader-container .credits,\n\t\t.loader-container .samples {\n\t\t\tcolor: rgba( 255, 255, 255, 0.75 );\n\t\t}\n\t`;\n\tdocument.head.appendChild( _styleElement );\n\n}\n\nexport class LoaderElement {\n\n\tconstructor() {\n\n\t\tinitializeStyles();\n\n\t\tconst container = document.createElement( 'div' );\n\t\tcontainer.classList.add( 'loader-container' );\n\n\t\tconst percentageEl = document.createElement( 'div' );\n\t\tpercentageEl.classList.add( 'percentage' );\n\t\tcontainer.appendChild( percentageEl );\n\n\t\tconst samplesEl = document.createElement( 'div' );\n\t\tsamplesEl.classList.add( 'samples' );\n\t\tcontainer.appendChild( samplesEl );\n\n\t\tconst creditsEl = document.createElement( 'div' );\n\t\tcreditsEl.classList.add( 'credits' );\n\t\tcontainer.appendChild( creditsEl );\n\n\t\tconst loaderBarEl = document.createElement( 'div' );\n\t\tloaderBarEl.classList.add( 'bar' );\n\t\tcontainer.appendChild( loaderBarEl );\n\n\t\tconst descriptionEl = document.createElement( 'div' );\n\t\tdescriptionEl.classList.add( 'description' );\n\t\tcontainer.appendChild( descriptionEl );\n\n\t\tthis._description = descriptionEl;\n\t\tthis._loaderBar = loaderBarEl;\n\t\tthis._percentage = percentageEl;\n\t\tthis._credits = creditsEl;\n\t\tthis._samples = samplesEl;\n\t\tthis._container = container;\n\n\t\tthis.setPercentage( 0 );\n\n\t}\n\n\tattach( container ) {\n\n\t\tcontainer.appendChild( this._container );\n\t\tcontainer.appendChild( this._description );\n\n\t}\n\n\tsetPercentage( perc ) {\n\n\t\tthis._loaderBar.style.width = `${ perc * 100 }%`;\n\n\t\tif ( perc === 0 ) {\n\n\t\t\tthis._percentage.innerText = 'Loading...';\n\n\t\t} else {\n\n\t\t\tthis._percentage.innerText = `${ ( perc * 100 ).toFixed( 0 ) }%`;\n\n\t\t}\n\n\t\tif ( perc >= 1 ) {\n\n\t\t\tthis._container.classList.remove( 'loading' );\n\n\t\t} else {\n\n\t\t\tthis._container.classList.add( 'loading' );\n\n\t\t}\n\n\t}\n\n\tsetSamples( count, compiling = false ) {\n\n\t\tif ( compiling ) {\n\n\t\t\tthis._samples.innerText = 'compiling shader...';\n\n\t\t} else {\n\n\t\t\tthis._samples.innerText = `${ Math.floor( count ) } samples`;\n\n\t\t}\n\n\t}\n\n\tsetCredits( credits ) {\n\n\t\tthis._credits.innerHTML = credits;\n\n\t}\n\n\tsetDescription( description ) {\n\n\t\tthis._description.innerHTML = description;\n\n\t}\n\n}\n","import { Box3, BufferAttribute } from 'three';\nimport { MeshBVH } from '../core/MeshBVH.js';\nimport { WorkerBase } from './utils/WorkerBase.js';\nimport { convertToBufferType, isSharedArrayBufferSupported } from '../utils/BufferUtils.js';\nimport { GenerateMeshBVHWorker } from './GenerateMeshBVHWorker.js';\nimport { ensureIndex } from '../core/build/geometryUtils.js';\n\nconst DEFAULT_WORKER_COUNT = typeof navigator !== 'undefined' ? navigator.hardwareConcurrency : 4;\nclass _ParallelMeshBVHWorker extends WorkerBase {\n\n\tconstructor() {\n\n\t\tconst worker = new Worker( new URL( './parallelMeshBVH.worker.js', import.meta.url ), { type: 'module' } );\n\t\tsuper( worker );\n\n\t\tthis.name = 'ParallelMeshBVHWorker';\n\t\tthis.maxWorkerCount = Math.max( DEFAULT_WORKER_COUNT, 4 );\n\n\t\tif ( ! isSharedArrayBufferSupported() ) {\n\n\t\t\tthrow new Error( 'ParallelMeshBVHWorker: Shared Array Buffers are not supported.' );\n\n\t\t}\n\n\t}\n\n\trunTask( worker, geometry, options = {} ) {\n\n\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\tif ( ! geometry.index && ! options.indirect ) {\n\n\t\t\t\tensureIndex( geometry, options );\n\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tgeometry.getAttribute( 'position' ).isInterleavedBufferAttribute ||\n\t\t\t\tgeometry.index && geometry.index.isInterleavedBufferAttribute\n\t\t\t) {\n\n\t\t\t\tthrow new Error( 'ParallelMeshBVHWorker: InterleavedBufferAttribute are not supported for the geometry attributes.' );\n\n\t\t\t}\n\n\t\t\tworker.onerror = e => {\n\n\t\t\t\treject( new Error( `ParallelMeshBVHWorker: ${ e.message }` ) );\n\n\t\t\t};\n\n\t\t\tworker.onmessage = e => {\n\n\t\t\t\tconst { data } = e;\n\n\t\t\t\tif ( data.error ) {\n\n\t\t\t\t\treject( new Error( data.error ) );\n\t\t\t\t\tworker.onmessage = null;\n\n\t\t\t\t} else if ( data.serialized ) {\n\n\t\t\t\t\tconst { serialized, position } = data;\n\t\t\t\t\tconst bvh = MeshBVH.deserialize( serialized, geometry, { setIndex: false } );\n\t\t\t\t\tconst boundsOptions = {\n\t\t\t\t\t\tsetBoundingBox: true,\n\t\t\t\t\t\t...options,\n\t\t\t\t\t};\n\n\t\t\t\t\t// we need to replace the arrays because they're neutered entirely by the\n\t\t\t\t\t// webworker transfer.\n\t\t\t\t\tgeometry.attributes.position.array = position;\n\t\t\t\t\tif ( serialized.index ) {\n\n\t\t\t\t\t\tif ( geometry.index ) {\n\n\t\t\t\t\t\t\tgeometry.index.array = serialized.index;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconst newIndex = new BufferAttribute( serialized.index, 1, false );\n\t\t\t\t\t\t\tgeometry.setIndex( newIndex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( boundsOptions.setBoundingBox ) {\n\n\t\t\t\t\t\tgeometry.boundingBox = bvh.getBoundingBox( new Box3() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( options.onProgress ) {\n\n\t\t\t\t\t\toptions.onProgress( data.progress );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( bvh );\n\t\t\t\t\tworker.onmessage = null;\n\n\t\t\t\t} else if ( options.onProgress ) {\n\n\t\t\t\t\toptions.onProgress( data.progress );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tconst index = geometry.index ? geometry.index.array : null;\n\t\t\tconst position = geometry.attributes.position.array;\n\t\t\tworker.postMessage( {\n\n\t\t\t\toperation: 'BUILD_BVH',\n\t\t\t\tmaxWorkerCount: this.maxWorkerCount,\n\t\t\t\tindex: convertToBufferType( index, SharedArrayBuffer ),\n\t\t\t\tposition: convertToBufferType( position, SharedArrayBuffer ),\n\t\t\t\toptions: {\n\t\t\t\t\t...options,\n\t\t\t\t\tonProgress: null,\n\t\t\t\t\tincludedProgressCallback: Boolean( options.onProgress ),\n\t\t\t\t\tgroups: [ ... geometry.groups ],\n\t\t\t\t},\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n}\n\nexport class ParallelMeshBVHWorker {\n\n\tconstructor() {\n\n\t\tif ( isSharedArrayBufferSupported() ) {\n\n\t\t\treturn new _ParallelMeshBVHWorker();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'ParallelMeshBVHWorker: SharedArrayBuffers not supported. Falling back to single-threaded GenerateMeshBVHWorker.' );\n\n\t\t\tconst object = new GenerateMeshBVHWorker();\n\t\t\tobject.maxWorkerCount = DEFAULT_WORKER_COUNT;\n\t\t\treturn object;\n\n\t\t}\n\n\t}\n\n}\n","export class WorkerBase {\n\n\tconstructor( worker ) {\n\n\t\tthis.name = 'WorkerBase';\n\t\tthis.running = false;\n\t\tthis.worker = worker;\n\t\tthis.worker.onerror = e => {\n\n\t\t\tif ( e.message ) {\n\n\t\t\t\tthrow new Error( `${ this.name }: Could not create Web Worker with error \"${ e.message }\"` );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( `${ this.name }: Could not create Web Worker.` );\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\trunTask() {}\n\n\tgenerate( ...args ) {\n\n\t\tif ( this.running ) {\n\n\t\t\tthrow new Error( 'GenerateMeshBVHWorker: Already running job.' );\n\n\t\t}\n\n\t\tif ( this.worker === null ) {\n\n\t\t\tthrow new Error( 'GenerateMeshBVHWorker: Worker has been disposed.' );\n\n\t\t}\n\n\t\tthis.running = true;\n\n\t\tconst promise = this.runTask( this.worker, ...args );\n\t\tpromise.finally( () => {\n\n\t\t\tthis.running = false;\n\n\t\t} );\n\n\t\treturn promise;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.worker.terminate();\n\t\tthis.worker = null;\n\n\t}\n\n}\n","import { Box3, BufferAttribute } from 'three';\nimport { MeshBVH } from '../core/MeshBVH.js';\nimport { WorkerBase } from './utils/WorkerBase.js';\n\nexport class GenerateMeshBVHWorker extends WorkerBase {\n\n\tconstructor() {\n\n\t\tconst worker = new Worker( new URL( './generateMeshBVH.worker.js', import.meta.url ), { type: 'module' } );\n\t\tsuper( worker );\n\t\tthis.name = 'GenerateMeshBVHWorker';\n\n\t}\n\n\trunTask( worker, geometry, options = {} ) {\n\n\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\tif (\n\t\t\t\tgeometry.getAttribute( 'position' ).isInterleavedBufferAttribute ||\n\t\t\t\tgeometry.index && geometry.index.isInterleavedBufferAttribute\n\t\t\t) {\n\n\t\t\t\tthrow new Error( 'GenerateMeshBVHWorker: InterleavedBufferAttribute are not supported for the geometry attributes.' );\n\n\t\t\t}\n\n\t\t\tworker.onerror = e => {\n\n\t\t\t\treject( new Error( `GenerateMeshBVHWorker: ${ e.message }` ) );\n\n\t\t\t};\n\n\t\t\tworker.onmessage = e => {\n\n\t\t\t\tconst { data } = e;\n\n\t\t\t\tif ( data.error ) {\n\n\t\t\t\t\treject( new Error( data.error ) );\n\t\t\t\t\tworker.onmessage = null;\n\n\t\t\t\t} else if ( data.serialized ) {\n\n\t\t\t\t\tconst { serialized, position } = data;\n\t\t\t\t\tconst bvh = MeshBVH.deserialize( serialized, geometry, { setIndex: false } );\n\t\t\t\t\tconst boundsOptions = Object.assign( {\n\n\t\t\t\t\t\tsetBoundingBox: true,\n\n\t\t\t\t\t}, options );\n\n\t\t\t\t\t// we need to replace the arrays because they're neutered entirely by the\n\t\t\t\t\t// webworker transfer.\n\t\t\t\t\tgeometry.attributes.position.array = position;\n\t\t\t\t\tif ( serialized.index ) {\n\n\t\t\t\t\t\tif ( geometry.index ) {\n\n\t\t\t\t\t\t\tgeometry.index.array = serialized.index;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconst newIndex = new BufferAttribute( serialized.index, 1, false );\n\t\t\t\t\t\t\tgeometry.setIndex( newIndex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( boundsOptions.setBoundingBox ) {\n\n\t\t\t\t\t\tgeometry.boundingBox = bvh.getBoundingBox( new Box3() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( options.onProgress ) {\n\n\t\t\t\t\t\toptions.onProgress( data.progress );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( bvh );\n\t\t\t\t\tworker.onmessage = null;\n\n\t\t\t\t} else if ( options.onProgress ) {\n\n\t\t\t\t\toptions.onProgress( data.progress );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tconst index = geometry.index ? geometry.index.array : null;\n\t\t\tconst position = geometry.attributes.position.array;\n\t\t\tconst transferable = [ position ];\n\t\t\tif ( index ) {\n\n\t\t\t\ttransferable.push( index );\n\n\t\t\t}\n\n\t\t\tworker.postMessage( {\n\n\t\t\t\tindex,\n\t\t\t\tposition,\n\t\t\t\toptions: {\n\t\t\t\t\t...options,\n\t\t\t\t\tonProgress: null,\n\t\t\t\t\tincludedProgressCallback: Boolean( options.onProgress ),\n\t\t\t\t\tgroups: [ ... geometry.groups ],\n\t\t\t\t},\n\n\t\t\t}, transferable.map( arr => arr.buffer ).filter( v => ( typeof SharedArrayBuffer === 'undefined' ) || ! ( v instanceof SharedArrayBuffer ) ) );\n\n\t\t} );\n\n\t}\n\n}\n","let workerURL = require('./helpers/get-worker-url');\nlet bundleURL = require('./helpers/bundle-url');\nlet url = bundleURL.getBundleURL('bOlxE') + \"generateMeshBVH.worker.e1a14054.js\";module.exports = workerURL(url, bundleURL.getOrigin(url), false);","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","\"use strict\";\n\nvar bundleURL = {};\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n  return value;\n}\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n  return '/';\n}\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\n// TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n  return matches[0];\n}\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","let workerURL = require('./helpers/get-worker-url');\nlet bundleURL = require('./helpers/bundle-url');\nlet url = bundleURL.getBundleURL('bOlxE') + \"parallelMeshBVH.worker.fa7afa10.js\";module.exports = workerURL(url, bundleURL.getOrigin(url), false);"],"names":[],"version":3,"file":"index.ef8dcd8d.js.map","sourceRoot":"/__parcel_source_root/"}